
// Write by Wael Almattar, waelsy123@gmail.com
//

import java.io.BufferedOutputStream;
import java.io.File;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Collections;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Wael
 */
public class F4 extends javax.swing.JFrame {

     Vector v = new Vector() ; 
     Vector v1 = new Vector() ; 
     Vector v2 = new Vector() ; 
     boolean key = false ; 
    /**
     * Creates new form F4
     */
    public F4() {
         //  Prepare folders to unzip our archives.
        
            File de4 = new File("C://temp99/") ;
            if(de4.exists()) deleteDirectory(de4) ;

             de4.mkdir() ;

             File de = new File("C://temp99/a") ;
            if(de.exists()) deleteDirectory(de) ;

             de.mkdir() ;

            de = new File("C://temp99/b") ;
            if(!de.exists()) deleteDirectory(de) ;

             de.mkdir() ;

        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        rootNode = addNodes(null, new File("C://temp99/a"));
        //rootNode = addNodes(null, new File("."));
        treeModel = new DefaultTreeModel(rootNode);
        //treeModel.addTreeModelListener(new MyTreeModelListener());
        jTree1 = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        rootNode1 = addNodes(null, new File("C://temp99/b"));
        //rootNode = addNodes(null, new File("."));
        treeModel1 = new DefaultTreeModel(rootNode1);
        jTree2 = new javax.swing.JTree();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTree1.setModel(treeModel);
        jTree1.setEditable(true);

        jTree1.setShowsRootHandles(true);
        jScrollPane1.setViewportView(jTree1);

        jTree2.setModel(treeModel1);
        jTree2.setEditable(true);

        jTree2.setShowsRootHandles(true);
        jScrollPane2.setViewportView(jTree2);

        jButton1.setText("Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Compare");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setText("Paste url of Github project then Refresh");

        jTextField2.setText("Paste url of Github project then Refresh");

        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Refresh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Summary");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText("Click on Summary to compare the whole two zip files.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        this.setVisible(false);
        Main f = new Main(); 
        f.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        DefaultMutableTreeNode selectedElement   =(DefaultMutableTreeNode)jTree1.getSelectionPath().getLastPathComponent();
        DefaultMutableTreeNode selectedElement2   =(DefaultMutableTreeNode)jTree2.getSelectionPath().getLastPathComponent();
        
        // Get path for each file . 
        
        String f1 = null ;     
        f1 =   selectedElement.getParent().toString() + "\\" + selectedElement.getUserObject().toString() ;
            
        String f2 = null ;     
        f2 =   selectedElement2.getParent().toString() + "\\" + selectedElement2.getUserObject().toString() ;
        
       // this.setVisible(false);
        F3 frame = new F3(f1 , f2  ) ;
        frame.setVisible(true);
        
        
    }//GEN-LAST:event_jButton2ActionPerformed
 static public boolean deleteDirectory(File path) {
    if( path.exists() ) {
      File[] files = path.listFiles();
      for(int i=0; i<files.length; i++) {
         if(files[i].isDirectory()) {
           deleteDirectory(files[i]);
         }
         else {
           files[i].delete();
         }
      }
    }
    return( path.delete() );
  }
 
 
 
 
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
  File de2 = new File("C://temp99/a") ;
            if(de2.exists()) deleteDirectory(de2) ;

             de2.mkdir() ;
         de2.delete() ;        
        
        // Here we are trying to download the zip files from Internet.
        v1.removeAllElements();
          String site= jTextField1.getText() + "/archive/master.zip";
          String filename= "C://temp99/" + "temp1.zip";
          System.out.println(site) ;
          
     try {
        URL url=new URL(site);
        HttpURLConnection connection =
            (HttpURLConnection) url.openConnection();
        int filesize = connection.getContentLength();
        float totalDataRead=0;
            java.io.BufferedInputStream in = new java.io.BufferedInputStream(connection.getInputStream());
            java.io.FileOutputStream fos = new java.io.FileOutputStream(filename);
            java.io.BufferedOutputStream bout = new BufferedOutputStream(fos,1024);
            byte[] data = new byte[1024];
            int i=0;
            while((i=in.read(data,0,1024))>=0)
            {
                totalDataRead=totalDataRead+i;
                bout.write(data,0,i);
                
                
            }  
            bout.close();
            in.close();
    }
    catch(Exception e)
    {
         javax.swing.JOptionPane.showConfirmDialog((java.awt.Component)
                 null,e.getMessage(), "Error",
                 javax.swing.JOptionPane.DEFAULT_OPTION);
    }

        // Download the zip file to c://temp99/a/
     
       File de = new File("C://temp99/a/") ;
        if(de.exists()){
        deleteDirectory(de);
        de.mkdir() ;}
        
        else 
         de.mkdir() ;
        
        JFileChooser fc = null ;

                zip zip1 = new zip("C://temp99/temp1.zip" , "C://temp99/a"); 
                zip1.unzip();
                
            
            
    
       
       // Browser the project on a list.
       
         rootNode.removeAllChildren();
            secondrootNode = addNodes(null, new File("C://temp99/a"));
            for (int i = 0; i < secondrootNode.getChildCount(); i++){
               rootNode.add((DefaultMutableTreeNode)secondrootNode.children().nextElement());
            }
         
            treeModel.reload();
            
     // list of files on this project which we will use to make summary.
            
           v1 = v ;
           v.removeAllElements();
         if(v1.isEmpty()) System.out.println(" ");
         System.out.println(v1.elementAt(3)) ; 
     
         
         key = true ; 
     
     
     
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
  File de2 = new File("C://temp99/b") ;
            if(de2.exists()) deleteDirectory(de2) ;

             de2.mkdir() ;
         de2.delete() ;
        v2.removeAllElements(); 
        
          String site= jTextField2.getText() + "/archive/master.zip";
          String filename= "C://temp99/" + "temp2.zip";
          System.out.println(site) ;
          
     try {
        URL url=new URL(site);
        HttpURLConnection connection =
            (HttpURLConnection) url.openConnection();
        int filesize = connection.getContentLength();
        float totalDataRead=0;
            java.io.BufferedInputStream in = new java.io.BufferedInputStream(connection.getInputStream());
            java.io.FileOutputStream fos = new java.io.FileOutputStream(filename);
            java.io.BufferedOutputStream bout = new BufferedOutputStream(fos,1024);
            byte[] data = new byte[1024];
            int i=0;
            while((i=in.read(data,0,1024))>=0)
            {
                totalDataRead=totalDataRead+i;
                bout.write(data,0,i);
                
                
            }  
            bout.close();
            in.close();
    }

    catch(Exception e)
    {
         javax.swing.JOptionPane.showConfirmDialog((java.awt.Component)
                 null,e.getMessage(), "Error",
                 javax.swing.JOptionPane.DEFAULT_OPTION);
    }

      // Unzip the zip file to c://temp99/a/
     
       File de = new File("C://temp99/b/") ;
        if(de.exists()){
        deleteDirectory(de);
        de.mkdir() ;}
        
        else 
         de.mkdir() ;
        
        JFileChooser fc = null ;

                zip zip1 = new zip("C://temp99/temp2.zip" , "C://temp99/b"); 
                zip1.unzip();
                
         // Browser the project on a list.
                
                
            rootNode1.removeAllChildren();
            secondrootNode1 = addNodes(null, new File("C://temp99/b"));
            for (int i = 0; i < secondrootNode1.getChildCount(); i++){
               rootNode1.add((DefaultMutableTreeNode)secondrootNode1.children().nextElement());
            }
            treeModel1.reload();
            
            
       // list of files on this project which we will use to make summary.
            
         key = false ; 
         
    
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

         frame f = new frame(v1 , v2 ) ;
       // f.setVisible(true);
         jLabel1.setText("These two Projects have Plagiarism rate : " + f.sum );
   
        
// TODO add your handling code here:  // It had written by Netbeans ;)
    }//GEN-LAST:event_jButton5ActionPerformed

    private DefaultMutableTreeNode addNodes(DefaultMutableTreeNode curTop, File dir) {
   String curPath = dir.getPath();
   DefaultMutableTreeNode curDir = new DefaultMutableTreeNode(curPath);
   if (curTop != null ) { // should only be null at root
     curTop.add(curDir);
    
   }
  
   
   
   Vector ol = new Vector();
   String[] tmp = dir.list();
   for (int i = 0; i < tmp.length; i++)
     ol.addElement(tmp[i]);
   Collections.sort(ol, String.CASE_INSENSITIVE_ORDER);
   File f;
   Vector files = new Vector();
   // Make two passes, one for Dirs and one for Files. This is #1.
   for (int i = 0; i < ol.size(); i++) {
     String thisObject = (String) ol.elementAt(i);
     String newPath;
     if (curPath.equals("."))
       newPath = thisObject;
     else
       newPath = curPath + File.separator + thisObject;
     if ((f = new File(newPath)).isDirectory())
       addNodes(curDir, f);
     else
     {
         
     if(thisObject.endsWith(".java")){
        String s = dir.toString() + '\\' +  thisObject ;
        
        if(key == false){
            v1.addElement(s);
        }
        else{
            v2.addElement(s);
        }
       files.addElement(thisObject);
     }
       
     }
   }
   // Pass two: for files.
   for (int fnum = 0; fnum < files.size(); fnum++)
     curDir.add(new DefaultMutableTreeNode(files.elementAt(fnum)));
   return curDir;
 }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTree jTree1;
    private javax.swing.JTree jTree2;
    // End of variables declaration//GEN-END:variables

   protected DefaultMutableTreeNode rootNode;
   protected DefaultMutableTreeNode secondrootNode;
   protected DefaultTreeModel treeModel;
   
   protected DefaultMutableTreeNode rootNode1;
   protected DefaultMutableTreeNode secondrootNode1;
   protected DefaultTreeModel treeModel1;

}
