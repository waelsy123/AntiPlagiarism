
// Write by Wael Almattar, waelsy123@gmail.com
//

import java.io.File;
import java.util.Collections;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Wael
 */
public class F1 extends javax.swing.JFrame {

     Vector v = new Vector() ; 
     Vector v1 = new Vector() ; 
     Vector v2 = new Vector() ; 
     boolean key = false ; 
     
    /**
     * Creates new form F1
     */
    public F1() {
        //  Prepare folders to unzip our archives.
        
            File de4 = new File("C://temp99/") ;
            if(de4.exists()) deleteDirectory(de4) ;
            de4.mkdir() ;

             File de = new File("C://temp99/a") ;
            if(de.exists()) deleteDirectory(de) ;

             de.mkdir() ;

            de = new File("C://temp99/b") ;
            if(!de.exists()) deleteDirectory(de) ;

             de.mkdir() ;

            initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        rootNode = addNodes(null, new File("C://temp99/a"));
        //rootNode = addNodes(null, new File("."));
        treeModel = new DefaultTreeModel(rootNode);
        //treeModel.addTreeModelListener(new MyTreeModelListener());
        jTree1 = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        rootNode1 = addNodes(null, new File("C://temp99/b"));
        //rootNode = addNodes(null, new File("."));
        treeModel1 = new DefaultTreeModel(rootNode1);
        //treeModel.addTreeModelListener(new MyTreeModelListener());
        jTree2 = new javax.swing.JTree();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Select archive #1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Select archive #2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTree1.setModel(treeModel);
        jTree1.setEditable(true);
        jTree1.getSelectionModel().setSelectionMode
        (TreeSelectionModel.SINGLE_TREE_SELECTION);
        jTree1.setShowsRootHandles(true);
        jScrollPane1.setViewportView(jTree1);

        jTree2.setModel(treeModel1);
        jTree2.setEditable(true);
        jTree2.getSelectionModel().setSelectionMode
        (TreeSelectionModel.SINGLE_TREE_SELECTION);
        jTree2.setShowsRootHandles(true);
        jScrollPane2.setViewportView(jTree2);

        jButton3.setText("Compare");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Home");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Summary");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText("Click on Summary to compare the whole two zip files.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2)
                                .addContainerGap())
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(40, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

         this.setVisible(false);
         Main f = new Main() ;
         f.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         File de2 = new File("C://temp99/a") ;
            if(de2.exists()) deleteDirectory(de2) ;

             de2.mkdir() ;
         de2.delete() ;
        v1.removeAllElements(); 
        
        File de = new File("C://temp99/a/") ;
             if(de.exists()){
        deleteDirectory(de);
        de.mkdir() ;}
        
        
        else 
         de.mkdir() ;
        
        JFileChooser fc = null ;
       
       fc = new JFileChooser();
       FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "ZIP files", "zip");
       fc.setFileFilter(filter) ;
        
       if (evt.getSource() == jButton1) {
            int returnVal = fc.showOpenDialog(F1.this);
            File file = fc.getSelectedFile();
            if(returnVal == JFileChooser.APPROVE_OPTION) {
                System.out.println("You chose to open this file: " +
                                fc.getSelectedFile().getAbsolutePath());
                
                zip zip1 = new zip(fc.getSelectedFile().getAbsolutePath(), "C://temp99/a"); 
                zip1.unzip();
                
            }
            
       }
             
       
        // Browser the files on tree.
       
         rootNode.removeAllChildren();
            secondrootNode = addNodes(null, new File("C://temp99/a"));
            for (int i = 0; i < secondrootNode.getChildCount(); i++){
               rootNode.add((DefaultMutableTreeNode)secondrootNode.children().nextElement());
            }
            //rootNode.add((DefaultMutableTreeNode)secondrootNode.children().nextElement());
            treeModel.reload();
            
            
         // list of files on this project which we will use to make summary.
        

            key = true ; 
            
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  File de2 = new File("C://temp99/b") ;
            if(de2.exists()) deleteDirectory(de2) ;

             de2.mkdir() ;
         de2.delete() ;
        v2.removeAllElements(); 
       
        File de = new File("C://temp99/b") ;
        if(de.exists()){
        deleteDirectory(de);
        de.mkdir() ;}
        
  
        else{
            de.mkdir() ;
        }
        JFileChooser fc = null ;
       
       fc = new JFileChooser();
       FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "ZIP files", "zip");
       fc.setFileFilter(filter) ;
        
       if (evt.getSource() == jButton2) {
            int returnVal = fc.showOpenDialog(F1.this);
            File file = fc.getSelectedFile();
            if(returnVal == JFileChooser.APPROVE_OPTION) {
                System.out.println("You chose to open this file: " +
                                fc.getSelectedFile().getAbsolutePath());
                
                zip zip1 = new zip(fc.getSelectedFile().getAbsolutePath(), "C://temp99/b"); 
                zip1.unzip();
                
            }
            
       }
             
       
        // Browser the files on tree.
       
         rootNode1.removeAllChildren();
            secondrootNode1 = addNodes(null, new File("C://temp99/b"));
            for (int i = 0; i < secondrootNode1.getChildCount(); i++){
               rootNode1.add((DefaultMutableTreeNode)secondrootNode1.children().nextElement());
            }
            //rootNode.add((DefaultMutableTreeNode)secondrootNode.children().nextElement());
            treeModel1.reload();
            
       // list of files on this project which we will use to make summary.
            
         key = false ; 
         

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultMutableTreeNode selectedElement   =(DefaultMutableTreeNode)jTree1.getSelectionPath().getLastPathComponent();
        DefaultMutableTreeNode selectedElement2   =(DefaultMutableTreeNode)jTree2.getSelectionPath().getLastPathComponent();
        //Get the path of files.
        String f1 = null ;     
        f1 =   selectedElement.getParent().toString() + "\\" + selectedElement.getUserObject().toString() ;
            
        String f2 = null ;     
        f2 =   selectedElement2.getParent().toString() + "\\" + selectedElement2.getUserObject().toString() ;
        
     //   this.setVisible(false);
        F3 frame = new F3(f1 , f2  ) ;
        frame.setVisible(true);
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        frame f = new frame(v1 , v2 ) ;
       // f.setVisible(true);
          jLabel1.setText("These two Projects have Plagiarism rate : " + f.sum );

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

     static public boolean deleteDirectory(File path) {
    if( path.exists() ) {
      File[] files = path.listFiles();
      for(int i=0; i<files.length; i++) {
         if(files[i].isDirectory()) {
           deleteDirectory(files[i]);
         }
         else {
           files[i].delete();
         }
      }
    }
    return( path.delete() );
  }
     
private DefaultMutableTreeNode addNodes(DefaultMutableTreeNode curTop, File dir) {
   String curPath = dir.getPath();
   DefaultMutableTreeNode curDir = new DefaultMutableTreeNode(curPath);
   if (curTop != null ) { // should only be null at root
     curTop.add(curDir);
    
   }
   
   Vector ol = new Vector();
   String[] tmp = dir.list();
   if(tmp != null ) { 
   for (int i = 0; i < tmp.length; i++)
     ol.addElement(tmp[i]);
   Collections.sort(ol, String.CASE_INSENSITIVE_ORDER);
   File f;
   Vector files = new Vector();
   // Make two passes, one for Dirs and one for Files. This is #1.
   for (int i = 0; i < ol.size(); i++) {
     String thisObject = (String) ol.elementAt(i);
     String newPath;
     if (curPath.equals("."))
       newPath = thisObject;
     else
       newPath = curPath + File.separator + thisObject;
     if ((f = new File(newPath)).isDirectory())
       addNodes(curDir, f);
     else
     {
         
     if(thisObject.endsWith(".java")){
         String s = dir.toString() + '\\' +  thisObject ;
        if(key == false ){
            v1.addElement(s);
        }
        else{
            v2.addElement(s);
        }
       files.addElement(thisObject);
     }
       
     }
   }
   // Pass two: for files.
   for (int fnum = 0; fnum < files.size(); fnum++)
     curDir.add(new DefaultMutableTreeNode(files.elementAt(fnum)));
   
   }
   
   return curDir;
 }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
         File de = new File("C://temp99/b") ;
                    if(de.exists()){
                    deleteDirectory(de);
                    }
                    else{
                        de.mkdir() ;
                    }
                File de1 = new File("C://temp99/a") ;
                    if(de1.exists()){
                    deleteDirectory(de1);
                    }
                    else{
                        de1.mkdir() ;
                    }
                    
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
           
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
           public void run() {
                
                    
              new F1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree1;
    private javax.swing.JTree jTree2;
    // End of variables declaration//GEN-END:variables

   protected DefaultMutableTreeNode rootNode;
   protected DefaultMutableTreeNode secondrootNode;
   protected DefaultTreeModel treeModel;
   
   protected DefaultMutableTreeNode rootNode1;
   protected DefaultMutableTreeNode secondrootNode1;
   protected DefaultTreeModel treeModel1;
   
}
